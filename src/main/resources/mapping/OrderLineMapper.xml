<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sss.dao.OrderLineMapper" >
  <resultMap id="BaseResultMap" type="com.sss.pojo.OrderLine" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="odno" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="sid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="img" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="quantity" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="total_price" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="uid" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, odno, sid, sname, img, quantity, total_price, uid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderline
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderline
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sss.pojo.OrderLine" >
    insert into orderline (id, odno, sid, 
      sname, img, quantity, 
      total_price, uid)
    values (#{id,jdbcType=INTEGER}, #{odno,jdbcType=BIGINT}, #{sid,jdbcType=INTEGER}, 
      #{sname,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER}, 
      #{totalPrice,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sss.pojo.OrderLine" >
    insert into orderline
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="odno != null" >
        odno,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="sname != null" >
        sname,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="uid != null" >
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="odno != null" >
        #{odno,jdbcType=BIGINT},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="sname != null" >
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sss.pojo.OrderLine" >
    update orderline
    <set >
      <if test="odno != null" >
        odno = #{odno,jdbcType=BIGINT},
      </if>
      <if test="sid != null" >
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="sname != null" >
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sss.pojo.OrderLine" >
    update orderline
    set odno = #{odno,jdbcType=BIGINT},
      sid = #{sid,jdbcType=INTEGER},
      sname = #{sname,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getByOrderNoUserId" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from orderline
    where odno = #{orderNo}
    and uid = #{userId}
  </select>
  <select id="getAllByOrderNo" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select
    <include refid="Base_Column_List" />
    from orderline
    where odno = #{orderNo}
  </select>

  <insert id="batchInsert"   parameterType="java.util.List">
    insert into orderline (id, odno, sid, sname, img, quantity, total_price, uid)
    values
    <foreach collection="orderLineList" separator="," index="index" item="line">
      (
      #{line.id}, #{line.odno}, #{line.sid}, #{line.sname}, #{line.img}, #{line.quantity}, #{line.total_price}, #{line.uid}
      )
    </foreach>
  </insert>

</mapper>